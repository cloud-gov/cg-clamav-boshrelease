#set -e # exit immediately if a simple command exits with a non-zero status
set -eu # report the usage of uninitialized variables
mkdir -p /var/vcap/packages/clamav
mkdir -p /var/vcap/data/clamav

# Available variables
# $BOSH_COMPILE_TARGET - where this package & spec'd source files are available
# $BOSH_INSTALL_TARGET - where you copy/install files to be included in package
export HOME=/var/vcap
export CLAMAV_HOME=/var/vcap/packages/clamav
export CLAMAV_DATA=/var/vcap/data/clamav
export COMPILE_HOME=`pwd`
export RUST_HOME=/var/vcap/packages/rust
export RUST_DATA=/var/vcap/data/rust
export RUST_TMP=$BOSH_COMPILE_TARGET/clamav/rust-tmp
export CHECK_TMP=$BOSH_COMPILE_TARGET/clamav/check-tmp
export PCRE_TMP=$BOSH_COMPILE_TARGET/clamav/pcre-tmp
export JSONC_TMP=$BOSH_COMPILE_TARGET/clamav/jsonc-tmp

# Install Rust
mkdir -p $RUST_TMP
tar xvf clamav/rust-*-x86_64-unknown-linux-gnu.tar.xz -C $RUST_TMP --strip-components=1 --exclude=rust-docs
cd $RUST_TMP
./install.sh --without=rust-docs
cd ..
rm -rf ./rust-tmp

# Install Check
cd $COMPILE_HOME

mkdir -p $CHECK_TMP
tar xvf clamav/check-*.tar.gz -C $CHECK_TMP
cd $CHECK_TMP/check-*
mkdir build && cd build
cmake ../
make
make install
cd ..
rm -rf $CHECK_TMP

# Install PCRE2
cd $COMPILE_HOME

mkdir -p $PCRE_TMP
tar xzf clamav/pcre2-*.tar.gz -C $PCRE_TMP
cd $PCRE_TMP/pcre2-*
./configure \
    --enable-jit \
    --prefix ${BOSH_INSTALL_TARGET}
make
make install
cd ..
rm -rf $PCRE_TMP

# Install JSON-C
cd $COMPILE_HOME

mkdir -p $JSONC_TMP
tar xzf clamav/json-c-*.tar.gz -C $JSONC_TMP
cd $JSONC_TMP/json-c*
mkdir build && cd build
cmake ../
make
make install
cd ..
rm -rf $JSONC_TMP

# Install ClamAV
cd $COMPILE_HOME

tar xvzf clamav/clamav*.tar.gz
cd clamav-*
mkdir build && cd build
cmake .. \
    -D CMAKE_INSTALL_PREFIX=$CLAMAV_HOME \
    -D CMAKE_INSTALL_LIBDIR=lib \
    -D APP_CONFIG_DIRECTORY=$CLAMAV_HOME \
    -D DATABASE_DIRECTORY=$CLAMAV_DATA/database \
    -D ENABLE_JSON_SHARED=OFF \
    -D ENABLE_TESTS=OFF \
    -D ENABLE_MILTER=OFF
cmake --build .
cmake --build . --target install

# do an initial sync of the virus definition at compile time
mkdir -p $CLAMAV_DATA/database

TMPCONF=$(mktemp)

# minimum configuration required to do a db sync
cat << EOF > $TMPCONF
DatabaseDirectory $CLAMAV_DATA/database
DatabaseMirror db.us.clamav.net
DatabaseMirror database.clamav.net
EOF

# do the sync
$CLAMAV_HOME/bin/freshclam -u root --config-file $TMPCONF

# set the monit flag
touch $CLAMAV_DATA/database/defs_are_current

rm $TMPCONF

cd $COMPILE_HOME

# remove html docs
rm -rf /var/vcap/packages/clamav/share/doc/